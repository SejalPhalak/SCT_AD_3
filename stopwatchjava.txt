package com.example.stopwatch2;

import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private TextView timerText;
    private Button startBtn, pauseBtn, resetBtn;

    private long startTime = 0L;
    private long timeBuffer = 0L;
    private long updateTime = 0L;

    private Handler handler = new Handler();
    private Runnable runnable;

    private boolean isRunning = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        timerText = findViewById(R.id.timerText);
        startBtn = findViewById(R.id.startBtn);
        pauseBtn = findViewById(R.id.pauseBtn);
        resetBtn = findViewById(R.id.resetBtn);

        startBtn.setOnClickListener(v -> {
            if (!isRunning) {
                startTime = System.currentTimeMillis();
                handler.post(runnable = new Runnable() {
                    public void run() {
                        updateTime = timeBuffer + (System.currentTimeMillis() - startTime);
                        int secs = (int) (updateTime / 1000);
                        int mins = secs / 60;
                        secs = secs % 60;
                        int millis = (int) (updateTime % 1000) / 10;
                        timerText.setText(String.format("%02d:%02d:%02d", mins, secs, millis));
                        handler.postDelayed(this, 10);
                    }
                });
                isRunning = true;
            }
        });

        pauseBtn.setOnClickListener(v -> {
            if (isRunning) {
                timeBuffer += System.currentTimeMillis() - startTime;
                handler.removeCallbacks(runnable);
                isRunning = false;
            }
        });

        resetBtn.setOnClickListener(v -> {
            startTime = 0L;
            timeBuffer = 0L;
            updateTime = 0L;
            timerText.setText("00:00:00");
            handler.removeCallbacks(runnable);
            isRunning = false;
        });
    }
}
